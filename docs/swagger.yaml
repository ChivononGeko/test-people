basePath: /
definitions:
  transport.PersonDTO:
    properties:
      age:
        example: 30
        type: integer
      gender:
        example: male
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Ivan
        type: string
      nationality:
        example: Russian
        type: string
      patronymic:
        example: Ivanovich
        type: string
      surname:
        example: Petrov
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for managing people.
  title: People API
  version: "1.0"
paths:
  /person:
    delete:
      description: Удаляет пользователя по ID
      parameters:
      - description: ID пользователя
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ID
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Удалить пользователя
      tags:
      - person
    get:
      description: Возвращает список пользователей, подходящих под фильтр
      parameters:
      - description: Имя
        in: query
        name: name
        type: string
      - description: Фамилия
        in: query
        name: surname
        type: string
      - description: Отчество
        in: query
        name: patronymic
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/transport.PersonDTO'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Получить пользователей по фильтру
      tags:
      - person
    post:
      consumes:
      - application/json
      description: Добавляет нового пользователя
      parameters:
      - description: Новый пользователь
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/transport.PersonDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Создать пользователя
      tags:
      - person
    put:
      consumes:
      - application/json
      description: Обновляет данные пользователя по ID
      parameters:
      - description: ID пользователя
        in: query
        name: id
        required: true
        type: integer
      - description: Обновлённые данные
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/transport.PersonDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Обновить пользователя
      tags:
      - person
swagger: "2.0"
